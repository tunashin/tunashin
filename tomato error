#include<iostream>#include<queue>
using namespace std;
int main(){ int N, M; int cnt = 0, cont = 0;// cnt = 0 의 갯수 cont는 컨트롤 하는것 int arr[100][100]; int count = 0; //count 는 cont를 제어하기 위한 갯수 int ans = 0; // 답읍 세기 위한 것 queue<pair<int, int> > q; scanf("%d %d", &N, &M); int max = N*M; int minus_count = 0; for (int i = 0; i < N; i++) {  for (int j = 0; j < M; j++)  {   scanf("%d", &arr[i][j]);   if (arr[i][j] == 1)    q.push(make_pair(i, j));   if (arr[i][j] == 0)    cnt++;   if (arr[i][j] == -1)   {    minus_count++;    if (minus_count == max)    {     cout << "-1" << endl;     return 0;    }   }  } } int ans_cont=0; while (!cont) {  int temp = q.size();  while (temp--)  {   int x = q.front().first;   int y = q.front().second;   if (x - 1 >= 0 && arr[x - 1][y] == 0)   {    arr[x - 1][y] = 1;    q.push(make_pair(x - 1, y));    count++;   }   if (y - 1 >= 0 && arr[x][y - 1] == 0)   {    arr[x][y - 1] = 1;    q.push(make_pair(x, y - 1));    count++;   }   if (x + 1 <= N-1 && arr[x + 1][y] == 0)   {    arr[x + 1][y] = 1;    q.push(make_pair(x + 1, y));    count++;   }   if (y + 1 <= M-1 && arr[x][y + 1] == 0)   {    arr[x][y + 1] = 1;    q.push(make_pair(x, y + 1));    count++;   }   if (count == cnt)    cont = 1;   q.pop();  }  ans++;  ans_cont++;  if (max < ans_cont)   break; } if (cnt == count) {  cout << ans << endl; } else {  cout << "-1" << endl; } return 0;}
